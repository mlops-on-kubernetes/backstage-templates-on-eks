apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  description: Deletes a EKS cluster with Spark Operator + extra enabled through Terraform
  name: delete-data-on-eks-spark
  title: Delete Data on EKS - Spark Operator
spec:
  owner: guest
  type: service
  parameters:
    - title: Terraform config options
      properties:
        tfVars:
          properties:
            name:
              default: spark-operator-doeks
              description: Name of the VPC and EKS Cluster
              type: string
            region:
              default: us-west-2
              description: Region
              type: string
          title: Terraform variables
          type: object
        name:
          title: name of this entry
          type: string
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./templates-spark-cleanup/
        values:
          name: ${{ parameters.name }}
          namespace: ${{ parameters.namespace }}
          tfVars: ${{ parameters.tfVars }}
          adminRoleName: ${{parameters.adminRoleName}}
          clusterName: ${{ parameters.clusterName }}
    # Delete GitHub action is not supported by backstage GitHub plugin and should be deleted manually
    # - id: delete-repo 
    #   name: Create Repository
    #   action: github:repo:delete
    #   input:
    #     repoUrl: ${{ parameters.repoUrl }}
    # Catalog Deregister is not available. So we have to deregister the component manally from Bacstage
    # - id: deregister
    #   name: De Register
    #   action: catalog:deregister
    #   input:
    #     repoContentsUrl: ${{ steps['init-repo'].output.repoContentsUrl }}
    #     catalogInfoPath: '/catalog-info.yaml'
    - id: apply-cm
      name: Apply TF variables CM
      action: cnoe:kubernetes:apply
      input:
        manifestPath: cm.yaml
        namespaced: true
        clusterName: ${{ parameters.clusterName }}
    - id: apply-workflow
      name: Start TF workflow
      action: cnoe:kubernetes:apply
      input:
        manifestPath: workflow.yaml
        namespaced: true
        clusterName: ${{ parameters.clusterName }}
  output:
    links:
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
